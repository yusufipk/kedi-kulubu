{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list-component.jsx","components/search/search-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","console","log","kedi","alt","src","id","name","email","catchPhrase","CardList","kediler","map","cat","Search","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","this","kediFiltrele","filter","toLowerCase","includes","fetch","then","response","json","users","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAGaA,G,YAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACGC,QAAQC,IAAIH,EAAMI,MACnB,qBACEC,IAAI,MACJC,IAAG,+BAA0BN,EAAMI,KAAKG,GAArC,4BAEL,6BAAKP,EAAMI,KAAKI,OAChB,6BAAKR,EAAMI,KAAKK,QAChB,4BAAIT,EAAMI,KAAKM,mBCTRC,G,MAAW,SAACX,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMY,QAAQC,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAAmBV,KAAMU,GAAdA,EAAIP,WCLVQ,G,MAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACpC,OACE,qBAAKhB,UAAU,aAAf,SACE,uBACEA,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,QC+BHG,E,kDAnCb,aAAe,IAAD,8BACZ,gBA6BFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA7BtC,EAAKC,MAAQ,CACXd,QAAS,GACTW,YAAa,IAJH,E,qDAQJ,IAAD,EAC0BI,KAAKD,MAA9Bd,EADD,EACCA,QAASW,EADV,EACUA,YACXK,EAAehB,EAAQiB,QAAO,SAACzB,GAAD,OAClCA,EAAKI,KAAKsB,cAAcC,SAASR,EAAYO,kBAE/C,OACE,sBAAK7B,UAAU,MAAf,UACE,8DACA,cAAC,EAAD,CAAQe,YAAY,aAAaC,aAAcU,KAAKV,eACpD,cAAC,EAAD,CAAUL,QAASgB,S,0CAKJ,IAAD,OAClBI,MACE,8EAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKd,SAAS,CAAEV,QAASwB,W,GA5B9BC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2fed0686.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card-style.css\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      {console.log(props.kedi)}\n      <img\n        alt=\"cat\"\n        src={`https://robohash.org/${props.kedi.id}?set=set4&size=180x180`}\n      ></img>\n      <h1>{props.kedi.name}</h1>\n      <h3>{props.kedi.email}</h3>\n      <p>{props.kedi.catchPhrase}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card } from \"../card/card-component\";\nimport \"./card-style.css\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.kediler.map((cat) => (\n        <Card key={cat.id} kedi={cat} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-style.css\";\n\nexport const Search = ({ placeholder, handleChange }) => {\n  return (\n    <div className=\"search-bar\">\n      <input\n        className=\"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange}\n      ></input>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list-component\";\nimport { Search } from \"./components/search/search-component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      kediler: [],\n      searchField: \"\",\n    };\n  }\n\n  render() {\n    const { kediler, searchField } = this.state;\n    const kediFiltrele = kediler.filter((kedi) =>\n      kedi.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Kedi Kulübü Üyeleri</h1>\n        <Search placeholder=\"Kediyi ara\" handleChange={this.handleChange} />\n        <CardList kediler={kediFiltrele} />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://raw.githubusercontent.com/yusufipk/kedi-kulubu/master/data/db.json\"\n    )\n      .then((response) => response.json())\n      .then((users) => this.setState({ kediler: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}